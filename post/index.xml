<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on LinuxClub BLOG</title>
    <link>https://blog.linux.it.teu.ac.jp/post/</link>
    <description>Recent content in Posts on LinuxClub BLOG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <copyright>Copyright (c) 2019, LinuxClub. All rights reserved.</copyright>
    <lastBuildDate>Mon, 09 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.linux.it.teu.ac.jp/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ICTSC2020 予選を11位で通過しました</title>
      <link>https://blog.linux.it.teu.ac.jp/post/ictsc2020-qualify/</link>
      <pubDate>Mon, 09 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.linux.it.teu.ac.jp/post/ictsc2020-qualify/</guid>
      <description>ICTSC(ICTトラブルシューティングコンテスト) 2020にチーム「インターネット」で参加しました．結果は40チーム中11位で予選を通過しました．
「ICTトラブルシューティングコンテスト2020」予選結果発表 – ICTSC | ICT トラブルシューティングコンテスト
チーム名の「インターネット」はkoyamaが適当につけました．インターネットは人権ですね．教科書にも書いてあるはずです．
チームは以下のLinuxClubのメンバー4人です．
 koyama panakuma Mikaner cl0wn  Write-up ルーティング Networkが作成できない？ [unknown] prefixがかぶっていることに気づいたタイミングで終了
公式の解説：networkが作成できない？ | ICTSC Tech Blog
経路を受け取れない [panakuma] 対象のルータにログインをし、journalctlでBGPのプロセスが出しているエラーを追っていると何らかの原因でプロセスが死んでいることが判明し、/var/logの中身を読んだりしているとメモリ不足が原因だと判明しました。 解決策としては、ルータに割り当てるメモリの量を増やすという単純な物でした。
繋がらなくなっちゃった！ [panakuma] 以下の事象が原因でトラブルが発生していた
 OSPFのルート交換をするインターフェースの指定が間違っていた OSPFのエリアの設定が間違っていた ルータIDが間違っていた  VyOSで動作していたため、とりあえずshow configurationを叩いてみたり、OSPFのステータスを確認しながらトラブルシューティングをしていきました。
また、この問題ではなぜこのような事象が発生したかを問われていたので、問題文を参考にルータの設定をいじくっていたら間違えてしまったのだろうという仮説を元に回答をしました。
またビルド失敗しちゃった～… [cl0wn] マルチステージビルドをしているDockerfileがあります。一つ目のイメージで実行ファイルを作って、もう一つのイメージでそれを動かすということをしています。
エラーを見ると
standard_init_linux.go:211: exec user process caused &amp;quot;no such file or directory&amp;quot; どうやら、一つ目のイメージにはあったファイルが2つ目のイメージにはなくてダイナミックリンクに失敗しているっぽいです。
したがって、static linkにしてやれば解決します。
RUN CGO_ENABLED=0 go build -o /app ./main.go公式の解説：またビルド失敗しちゃった～… | ICTSC Tech Blog
ウェブ WEBページが見れない [cl0wn] この問題は「apacheサーバーのdocumentルートを/home/user/html/に変更したところ、そのディレクトリ以下のファイルhome.</description>
    </item>
    
    <item>
      <title>記事を GitHub Actions を使ってデプロイするようにしました</title>
      <link>https://blog.linux.it.teu.ac.jp/post/deploy-from-actions/</link>
      <pubDate>Wed, 07 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.linux.it.teu.ac.jp/post/deploy-from-actions/</guid>
      <description>この記事は, GitHub Actions のテストも兼ねた投稿です.
何気に去年から部長やってます Forell (@F0rell) です. このブログが長らく更新されてなかったのと, 自分が何もやってないのもあったので動かしてみました.
さて, URL からわかる通り, このブログは GitHub Pages を用いて公開されています (該当リポジトリ: https://github.com/lc-tut/lc-tut.github.io). サイトを構成するために Hugo を用いており, リポジトリでは source ブランチを Hugo を用いてビルドして master に向けて該当ディレクトリ (docs/) を git subtree を用いて push することによってページを公開できるようにしております.
しかし, 手動でビルド, master に push するのははっきり言って面倒くさいです (初記事なのに何言ってるんだと思いますが, 大目に見てほしいです). 加えて, やり方が書いてあるといえども, git subtree という普段 (私が) 使わないコマンドも用いるため, 公開までのハードルが高いです.
そのため, GitHub Actions を使って自動でビルド + デプロイをしたいと考えました.
GitHub Actions とは かなり雑に言うと GitHub が提供している CI/CD ツールです.
詳しいことはこことかここ見たらいいかと思います. 語れるほどやっているわけではないので URL 貼っつけになって申し訳ないです.</description>
    </item>
    
    <item>
      <title>外部向けサーバーのリプレイスを実施</title>
      <link>https://blog.linux.it.teu.ac.jp/post/server-replace-2019/</link>
      <pubDate>Thu, 11 Jul 2019 11:30:00 +0900</pubDate>
      
      <guid>https://blog.linux.it.teu.ac.jp/post/server-replace-2019/</guid>
      <description>3年のKoyamaです。外部向けに公開している公式サイトやスポーツ大会エントリーサイトをホスティングしているサーバー(VPS)をリプレイスしました。この記事では昨年の12月から今年1月にかけて取り組んだことについて振り返ってみます。
現状の把握 これまでのサーバーの構成を把握することからはじめました。具体的には、どのようなサービスが動作して、移行が必要かを洗い出しました。
従来の構成:
 OS: CentOS 6.9 x86_64  GMO CloudのCentOS 6.2 Templateから導入   DNS(Bind) 9.8.2 Web(Nginx) 1.12.2 PHP 5.3.3 Python 2.6.6 uWSGI 2.0.10 MySQL Ver 14.14 Distrib 5.1.73 SQLite Ver 3.6.20 Postfix Ver 2.6.6  ミドルウェア(すべてパッケージからインストール)
把握した結果、OSのバージョンが古く、構築資料が無いことから再構築を行う判断をしました。
新たな構成の検討 提供する必要のあるサービスの洗い出しを行いました。その結果、以下のサービスが必要だと分かりました。
 DNS: 独自ドメインの管理 Web: Webサイトのホスティング SSL: WebのSSL対応 SSH: Webホスティング提供用  次にサーバー構成の検討を行いました。既存サーバーは1台だけでメモリとCPUが豊富にありました。しかし、リソースの利用状況を見る限り、そのリソースが活用されていることが確認できません。そこで、台数を2台へ増やし1台あたりのスペックを下げることにしました。この構成にすることで費用面を抑えつつ冗長化が行えました。
OS/ミドルウェアの選定 権威DNSサーバー DNSサーバーはこれまでBINDで運用されてきました。BINDは高機能な反面、脆弱性が見つかりやすくパッチ適用やアップデートなど運用コストが高いことが課題でした。移行にあたり機能と運用を考えNSDを採用しました。
Webサーバー これまでNginxで構築されてきたWebサーバーはこれまで通りNginxを採用しました。これは運用で問題なく利用できたことから判断しました。
Webホスティング SSH経由でサーバーへファイルをアップロードできるシステムが従来から存在しました。従来はOpenSSHとchrootを使って構築されていました。新システムではDockerでSSHサーバーを構築することにしました。
サーバー切り替え 今回の目標としてダウンタイム0で切り替えられることをあげました。既存のユーザーへ影響を与えずにサービス提供を継続することが大切であるという認識に基づいています。そのために以下の手順で切り替えを計画的におこないました。
 旧サーバー利用者へシステム移行を行うことを通知  メール, Twitterで周知 移行まで余裕をもたせて連絡   新サーバーの構築 切り替えを実施  DNSサーバーのみ新サーバーへ切り替え DNSサーバーから返すWebサーバーを新サーバーへ切り替え 旧サーバーへDNS, Webのアクセスが収束したことを確認    運用/監視 運用と監視は別の記事で紹介します。</description>
    </item>
    
    <item>
      <title>スポーツ大会エントリサイトを支えた技術 2018</title>
      <link>https://blog.linux.it.teu.ac.jp/post/sports-fes-entry-site/</link>
      <pubDate>Wed, 20 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.linux.it.teu.ac.jp/post/sports-fes-entry-site/</guid>
      <description>はじめに LinuxClubではスポーツ大会のエントリーサイトを運営しています。今年も体育会からの要請があり運営を行いました。この記事では運用に際し改善、改良を行った点を紹介します。
DNS 従来は www2.linux.it.teu.ac.jp/sports20xx/ の下に設置していました。今年度のサイトはサブドメイン sports.linux.it.teu.ac.jp に設置しました。
Nginx 担当: panakuma
ページ読み込みの高速化によるユーザビリティとセキュリティの向上のためHTTP/2とTLSv1.3に対応させました。
TLSv1.3対応 TLSv1.3はまだドラフト段階の規格なので5月現在で最新であったdraft22/23に対応しました。
使用したプログラム
 Nginx 1.13.10 OpenSSL 1.1.1-pre3  それぞれソースを公式サイトからダウンロードし、OpenSSLを組み込んでNginxをmakeしました。
レスポンスヘッダ/Cookie属性の変更 担当: koyama
セキュリティを高めるためにレスポンスヘッダへ以下を付与しました。
 strict-transport-security: max-age=15768000; includeSubdomains x-frame-options: SAMEORIGIN x-xss-protection: 1; mode=block x-content-type-options: nosniff cache-control: private, no-store pragma: no-cache  $ curl -si https://sports.linux.it.teu.ac.jp/ | head -n 15 HTTP/2 200 server: nginx date: Wed, 13 Jun 2018 01:36:00 GMT content-type: text/html; charset=utf-8 content-length: 2413 strict-transport-security: max-age=15768000; includeSubDomains x-frame-options: SAMEORIGIN x-xss-protection: 1; mode=block x-content-type-options: nosniff cache-control: private, no-store pragma: no-cache &amp;lt;!</description>
    </item>
    
    <item>
      <title>初心者向けハンズオンを行いました</title>
      <link>https://blog.linux.it.teu.ac.jp/post/hands-on-for-beginners/</link>
      <pubDate>Sat, 03 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.linux.it.teu.ac.jp/post/hands-on-for-beginners/</guid>
      <description>次期会計らしいKoyamaです。
11月から毎週火曜日に初心者/中級者を対象にそれぞれが得意とする分野のテーマでハンズオンを行いました。テーマはWeb(HTML/CSS), インフラ(WordPress), プログラミング(Python, C++)です。この記事では各回を担当したメンバーがハンズオンの概要について解説していきます。
Web(HTML, CSS) Webを担当したhomirunです。 今回はHTML5とCSS3について説明しました。 以下のスライドを使用しました。
  HTML_CSS  from homirun   サーバ構築(WordPress) Koyamaとpanakumaが担当しました。Windows上に作成したVMを使ってWebサーバ(nginx)とDBサーバ(MySQL)を構築してWordPressを設置しました。VMの環境構築に時間がかかった為、2回に分けて行いました。
サーバー構築のLT中！#LC勉強会 #LinuxClub pic.twitter.com/fuxVjW1d3A
&amp;mdash; 東京工科大学 LinuxClub (@lc_tut) 2017年11月21日  資料はGithubに公開しました。
tomoyk/ServerHandson
プログラミング(Pyhon) 自己紹介 Pythonの初心者入門 および スクレイピングハンズオンを担当したパナくまです。 Pythonのコーディング経験は6ヶ月弱ぐらいですが、書きやすい言語なので簡単なことをサクッと書くくらいは出来るようにスライドを作りました。
担当したテーマ  初心者入門  基本構文の使い方   スクレイピングハンズオン  beautifulsoup4を使った簡単なスクレイピング    テーマの内容 初心者入門 まずはプログラミング言語の要である変数やfor文 if文 ユーザー定義関数などを簡単に説明しました。
スクレイピングハンズオン beautifulsoupライブラリを用いて妹さえいればいい。の新着情報のトピックスを拾うというプログラムを作りました。
サンプルソース スクレイピングハンズオン from urllib import request from bs4 import BeautifulSoup as BS def main(): url = &amp;#34;http://imotosae.</description>
    </item>
    
    <item>
      <title>中古のThinkpad X230を買った</title>
      <link>https://blog.linux.it.teu.ac.jp/post/x230-us-keyboard/</link>
      <pubDate>Fri, 22 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.linux.it.teu.ac.jp/post/x230-us-keyboard/</guid>
      <description>次期会計のKoyamaです。マイニングしているマシンで温まりたい季節ですね。この記事はTUT 今年もTwitterしかしてません Advent Calendar 2017 - Adventarの22日目です。
ちょうど1ヶ月前くらいになりますが秋葉原で中古のThinkpad X230を買いました。主なスペックはSSD 240GBでOSなし、メモリ8G、CPU Intel Core-i5(haswell)です。
日本で流通しているラップトップのほとんどはキーボードが日本語配列ですが、個人的に好きなのは英字配列なのでキーボードを交換することにしました。Amazonに適合するキーボードが出品されていたの注文しました。出品者の所在地が中国だったので少し不安がありました..。
国際郵便なので追跡してみたところ、チャイナポストで輸送されていることが分かり少し安心しました。ただ、調べてみたところチャイナポストはかなり配送が遅いらしいことが分かり凹みました。
2週間ほど経った頃に日本郵便からキーボードが配送され、開封してみるとキレイな英字キーボードが入っていました（歓喜）
キーボードの交換 Thinkpadのキーボード交換は2箇所のネジを外すだけで行えることが以下のサイトで分かりました。
Thinkpad X230のキーボード交換方法は15分以下で完了。すごく簡単。
実際にキーボードを外してみます..。
新しいキーボードを取り付けました。
OSのインストール 買った時にgentooのインストールをしかけて中断したので年末に再挑戦したいと思います。
それではメリークリスマス &amp;amp;&amp;amp; 良いお年を</description>
    </item>
    
    <item>
      <title>VMware Workstation Pro 14がLinux Kernel4.13で動くようにする</title>
      <link>https://blog.linux.it.teu.ac.jp/post/vmware-on-kernal-413/</link>
      <pubDate>Sat, 18 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.linux.it.teu.ac.jp/post/vmware-on-kernal-413/</guid>
      <description>Author: panakuma
Linux Kernal 4.13がやっと動いたが&amp;hellip; 私のマシンでは長らくLinux kernel 4.4系しか動かなかったのですが、Oracle VirtualBoxの関連コンポーネントを根こそぎ削除したところ4.13系が動作しました。ですが&amp;hellip;
VMware Workstation Pro 14上の仮想マシンが起動しなくなりました
具体的には次のようなエラーメッセージが表示されます。
VMware Workstation がkernel4.13に対応していないことが原因のようです。Kernelに対する命令であるglobal_page_stateが4.13以降でglobal_zone_page_stateに変わったことが原因です。有志の方がこれに対応するパッチを作成していたので、これを用いて対処していきます。
次のコマンドでパッチを当てることができます。
sudo -i cd /tmp cp /usr/lib/vmware/modules/source/vmmon.tar . tar xf vmmon.tar rm vmmon.tar wget https://raw.githubusercontent.com/mkubecek/vmware-host-modules/fadedd9c8a4dd23f74da2b448572df95666dfe12/vmmon-only/linux/hostif.c mv -f hostif.c vmmon-only/linux/hostif.c tar cf vmmon.tar vmmon-only rm -fr vmmon-only mv -f vmmon.tar /usr/lib/vmware/modules/source/vmmon.tar vmware-modconfig --console --install-all コマンド実行後に再起動を行うことで、VMware Workstationが正常に動作します。
 参考文献
Arch Linux User Forums VMWare Workstation 14.0 - not enough physical memory</description>
    </item>
    
    <item>
      <title>紅華祭 2017を終えて</title>
      <link>https://blog.linux.it.teu.ac.jp/post/kokasai-matome-2017/</link>
      <pubDate>Fri, 20 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.linux.it.teu.ac.jp/post/kokasai-matome-2017/</guid>
      <description>LinuxClubの1年のKoyamaです。
今後、このブログを通じてサークルの活動の様子を積極的に発信していきたいと思います。この記事では2017年度 紅華祭を振り返ってみたいと思います。まず、部長から全体を通したコメントです。
全体を通じて 前日に完成している展示物がなくて焦ったものですがみなさんいいものを作ってきてくれて驚きました。普段コンソールに向かっているので見栄えのいいものと言われても困ったとは思いますが良い作品を展示できてよかったです。
個人制作 1,2年生を中心に個人作品を制作しました。作品名 [作者]という形式で見出しをつけています。
1. 空飛ぶ絨毯 [Koyama] Webカメラで取得した映像とあらかじめ用意した動画をクロマキー合成するプログラムを作成し、展示しました。使用した言語はPythonでライブラリはOpenCVを使用しました。以下の記事を参考にしながらコードを書きました。
 Python OpenCV3で画像の画素値を二値化して出力 | from umentu import stupid RPi + Python + OpenCV その３「クロマキー」 | OpenCV | kosakalab Getting Started with Videos — OpenCV-Python Tutorials 1 documentation  ソースコードは以下です。
#!/usr/bin/env python import numpy as np import cv2 import sys argv = sys.argv try: if argv[1] == &amp;#34;1&amp;#34;: param = &amp;#34;cloud.mp4&amp;#34; elif argv[1] == &amp;#34;2&amp;#34;: param = &amp;#34;coastline.mp4&amp;#34; elif argv[1] == &amp;#34;3&amp;#34;: param = &amp;#34;campus.</description>
    </item>
    
    <item>
      <title>LinuxClub Blogをはじめました.</title>
      <link>https://blog.linux.it.teu.ac.jp/post/hello-blog/</link>
      <pubDate>Sat, 17 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.linux.it.teu.ac.jp/post/hello-blog/</guid>
      <description>LinuxClubとは 詳しくは公式サイトをどうぞ.
LinuxClub | TOP
このブログについて 部員が気づいたことや取り組んだことを書く予定です.
なお, ブログの構築に関しては別記事で書きたいと思います.</description>
    </item>
    
  </channel>
</rss>
